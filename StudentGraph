
/**
 * Write a description of class StudentGraph here.
 *
 * @author (your name)
 * @version (a version number or a date)
 */
import java.lang.Object;
import java.util.*;
public class StudentGraph<String> implements Graph<String>
{
    // instance variables - replace the example below with your own
    //private int x;

    /**
     * Constructor for objects of class StudentGraph
     */
    public StudentGraph()
    {
        // initialise instance variables
        //x = 0;
    }
    
    /** Returns true if this graph is empty, false otherwise. */
    public boolean isEmpty(){return true;}
  
    /** Returns the number of vertices in this graph. */
    public int getNumVertices(){return 0;}
  
    /** Returns the number of arcs in this graph. */
    public int getNumArcs(){return 0;}
  
    /** Returns true iff a directed edge exists from v1 to v2. */
    public boolean isArc (Student vertex1, Student vertex2){return true;}
  
    /** Adds a vertex to this graph, associating object with vertex.
    * If the vertex already exists, nothing is inserted. */
    public void addVertex (Student vertex){}
  
    /**     Inserts an arc from vertex1 to vertex2.
    If the vertices exist. Else it does not change the graph. */
    public void addArc (Student vertex1, Student vertex2){}
  
    /** Retrieve from a graph the vertices x following vertex v (v->x)
    and returns them onto a linked list */
    public LinkedList<String> getSuccessors(Student vertex){
        LinkedList<String> test= new LinkedList<String>();
        return test;
    }
  
    /** Retrieve from a graph the vertices x pointing to vertex v (x->v)
    and returns them onto a linked list */
    public LinkedList<String> getPredecessors(Student vertex){
        LinkedList<String> test= new LinkedList<String>();
        return test;
    }
  
    /** Saves the current graph into a .tgf file.
    If it cannot save the file, a message is printed. */
    public void saveToTGF(String tgf_file_name);
  
    /** Returns a string representation of the adjacency matrix. */
    public String toString();
    
}
