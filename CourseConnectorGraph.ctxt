#BlueJ class context
comment0.target=CourseConnectorGraph
comment1.params=
comment1.target=CourseConnectorGraph()
comment1.text=\r\n\ Default\ Constructor\ for\ objects\ of\ class\ CourseConnectorGraphProject.\ Takes\ no\ params.\r\n
comment10.params=startUsername\ endUsername
comment10.target=java.util.Vector\ dfsTraversal(java.lang.String,\ java.lang.String)
comment10.text=\r\n\ Starts\ at\ given\ username,\ converts\ username\ to\ its\ corresponding\ Student,\ and\ traverses\ through\ the\ graph\ to\ find\ the\ \r\n\ end\ username's\ corresponding\ Student.\ \r\n\ \r\n\ Uses\ a\ Vector<String>\ to\ collects\ the\ Student\ name,\ the\ course\ that\ connects\ the\ Student\ to\ the\ next\ Student,\ and\ \r\n\ the\ next\ Student.\r\n\ For\ example,\ if\ alee31\ is\ connected\ to\ clee48\ through\ CS111,the\ Vector\ would\ be\ ["alee31",\ "cs111",\ "clee48"].\r\n\ \r\n\ @param\ String\ startUsername,\ the\ username\ to\ start\ at\r\n\ @param\ String\ endUsername,\ the\ username\ to\ end\ at\r\n\ \r\n\ @return\ Vector<String>\ finalTraversal,\ holds\ the\ students\ and\ the\ course\ that\ connects\ them\ together.\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ \ \ \ Returns\ a\ string\ representation\ of\ the\ graph.\ \r\n\ \ \ \ @return\ String\ representation\ of\ graph,\ showing\ vertices\ and\ edges\r\n
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment12.text=\r\n\ main\ for\ testing\ purposes.\r\n
comment2.params=g
comment2.target=CourseConnectorGraph(CourseConnectorGraph)
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ CourseConnectorGraphProject.\ Duplicates\ an\ input\ CourseConnectorGraph\ g\ to\ duplicate.\r\n\ @param\ CourseConnectorGraph\ g,\ the\ graph\ to\ duplicate\r\n
comment3.params=hashtable
comment3.target=CourseConnectorGraph\ graphFromHash(java.util.Hashtable)
comment3.text=\r\n\ Constructs\ a\ CourseConnectorGraph\ from\ an\ inputted\ Hashtable\ with\ Strings\ as\ keys\ and\ Vectors\ of\ Students\ as\ values.\ \r\n\ \r\n\ @param\ Hashtable\ hashtable\ with\ Strings\ as\ keys\ and\ Vectors\ of\ Students\ as\ values.\r\n\ @return\ CourseConnectorGraph\ g\ populated\ by\ the\ hashtable\r\n
comment4.params=vertex
comment4.target=void\ addVertex(java.lang.Object)
comment4.text=\r\n\ Adds\ a\ T\ object\ as\ a\ vertex\ to\ the\ graph.\r\n\ \r\n\ @param\ T\ vertex,\ the\ object\ to\ add\ as\ a\ vertex\ to\ the\ graph\r\n
comment5.params=vertex1\ vertex2\ course
comment5.target=void\ addEdge(java.lang.Object,\ java.lang.Object,\ java.lang.String)
comment5.text=\r\n\ Inserts\ an\ edge\ between\ two\ vertices\ of\ the\ graph.\r\n\ If\ one\ or\ both\ vertices\ do\ not\ exist,\ ignores\ the\ addition.\r\n\ \r\n\ @param\ T\ vertex1,\ T\ vertex\ 2\ the\ vertices\ to\ connect\r\n\ @param\ String\ course,\ the\ course\ label\ Students\ are\ connected\ by.\r\n
comment6.params=student1\ student2\ course
comment6.target=void\ addArc(java.lang.Object,\ java.lang.Object,\ java.lang.String)
comment6.text=\r\n\ Connects\ two\ students\ by\ their\ course\ by\ creating\ a\ StudentCourseLabel\ label\ that\ is\ stored\ as\ the\ graph\ arc.\ \r\n
comment7.params=f
comment7.target=void\ saveToTGF(java.lang.String)
comment7.text=\r\n\ Saves\ graph\ to\ a\ TGF\ file\r\n\ \r\n\ @param\ String\ f\ to\ name\ the\ output\ file\r\n
comment8.params=vertex
comment8.target=boolean\ containsVertex(java.lang.Object)
comment8.text=\r\n\ Checks\ if\ T\ vertex\ is\ a\ vertex\ in\ the\ graph.\r\n\ \r\n\ @param\ T\ vertex\ to\ check\r\n\ @return\ boolean\ representing\ whether\ the\ graph\ contains\ vertex\ or\ not.\ \r\n
comment9.params=search
comment9.target=java.lang.Object\ usernameToStudent(java.lang.String)
comment9.text=\r\n\ Private\ helper\ method\ takes\ a\ string\ username\ and\ returns\ its\ corresponding\ Student\ object.\ Returns\ a\ null\ object\ if\ the\r\n\ Student\ is\ not\ in\ the\ graph.\r\n\ \r\n\ @param\ String\ search,\ the\ username\ to\ be\ searched\ through\ the\ vertices\r\n\ @return\ T\ corresponding\ T\ object\ to\ the\ search\ username\r\n
numComments=13
